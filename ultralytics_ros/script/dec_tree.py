import graphviz

# Create a Digraph object
#dot = graphviz.Digraph(format='png')
dot = graphviz.Digraph(format='png', graph_attr={'rankdir': 'LR', 'ranksep': '1.0', 'nodesep': '0.5'})

# Add nodes with labels and shapes
dot.node("Start", label="Start", shape="ellipse")
dot.node("A", label="A", shape="ellipse")
dot.node("B", label="B", shape="ellipse")
dot.node("C", label="C", shape="ellipse")
dot.node("D", label="D", shape="ellipse")
dot.node("E", label="E", shape="ellipse")
dot.node("F", label="F", shape="ellipse")
dot.node("G", label="G", shape="ellipse")

dot.node("No A", label="No A", shape="ellipse")
dot.node("No B", label="No A", shape="ellipse")
dot.node("No C", label="No C", shape="ellipse")
dot.node("No D", label="No D", shape="ellipse")
dot.node("No E", label="No D", shape="ellipse")
dot.node("No F", label="No F", shape="ellipse")
dot.node("No F", label="No F", shape="ellipse")

dot.node("Add A based on B", label="Add A based on B", shape="box")
dot.node("Find C based on D", label="Find C based on D", shape="box")
dot.node("Find C based on F", label="Find C based on F", shape="box")
dot.node("Find F based on G", label="Find F based on G", shape="box")
dot.node("Find C based on B", label="Find C based on B", shape="box")
dot.node("Find D based on C", label="Find D based on C", shape="box")
dot.node("Find D based on G", label="Find D based on G", shape="box")
dot.node("Find G based on F", label="Find G based on F", shape="box")
dot.node("Find D based on B", label="Find D based on B", shape="box")
dot.node("Find F based on C", label="Find F based on C", shape="box")
dot.node("Find F based on E", label="Find F based on E", shape="box")
dot.node("Find G based on D", label="Find G based on D", shape="box")
dot.node("Find G based on E", label="Find G based on E", shape="box")
dot.node("Add E based on B", label="Add E based on B", shape="box")
dot.node("Add B based on E", label="Add based on E", shape="box")
dot.node("Add B based on A", label="Add B based on A", shape="box")

# Add edges between nodes
dot.edge("Start", "B")
dot.edge("B", "E")
dot.edge("E", "No A")
dot.edge("No A", "Add A based on B")
dot.edge("Add A based on B", "A")

dot.edge("E", "No C")
dot.edge("No C", "D")
dot.edge("D", "Find C based on D")
dot.edge("Find C based on D", "C")
dot.edge("No C", "F")
dot.edge("F", "Find C based on F")
dot.edge("Find C based on F","C")
dot.edge("No C", "G")
dot.edge("G", "Find F based on G")
dot.edge("Find F based on G", "F")
dot.edge("No C", "B")
dot.edge("No B", "Find C based on B")
dot.edge("Find C based on B", "C")

dot.edge("E", "No D")
dot.edge("No D", "C")
dot.edge("C", "Find D based on C")
dot.edge("Find D based on C", "D")
dot.edge("No D", "G")
dot.edge("G", "Find D based on G")
dot.edge("Find D based on G","D")
dot.edge("No D", "F")
dot.edge("F", "Find G based on F")
dot.edge("Find G based on F", "G")
dot.edge("No D", "B")
dot.edge("B", "Find D based on B")
dot.edge("Find D based on B", "D")

dot.edge("E", "No F")
dot.edge("No F", "G")
dot.edge("G", "Find F based on G")
dot.edge("Find F based on G", "F")
dot.edge("No F", "C")
dot.edge("C", "Find F based on C")
dot.edge("Find F based on C","F")
dot.edge("No F", "D")
dot.edge("D", "Find C based on D")
dot.edge("Find C based on D", "C")
dot.edge("No F", "E")
dot.edge("E", "Find F based on E")
dot.edge("Find F based on E", "F")

dot.edge("E", "No G")
dot.edge("No G", "F")
dot.edge("F", "Find G based on F")
dot.edge("Find G based on F", "G")
dot.edge("No G", "D")
dot.edge("D", "Find G based on D")
dot.edge("Find G based on D","G")
dot.edge("No G", "C")
dot.edge("C", "Find D based on C")
dot.edge("Find D based on C", "D")
dot.edge("No G", "E")
dot.edge("E", "Find G based on E")
dot.edge("Find G based on E", "G")

dot.edge("B", "No E")
dot.edge("No E", "Add E based on B")
dot.edge("Add E based on B","E")

dot.edge("No B", "E")
dot.edge("E", "Add B based on E")
dot.edge("Add B based on E", "B")

dot.edge("No B", "A")
dot.edge("A", "Add B based on A")
dot.edge("Add B based on A", "A")


# Render and view the graph
dot.view()

